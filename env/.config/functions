# bc
# bc calculator one-line non-interactive mode
bc1() {
    echo "$@" | bc
}


# ls
# Count entries from ls
lc() {
    flags=""
    files=""
    fileC=0

    # separate flags and files
    for arg in $@; do
        case $arg in
            -*)
                flags="$flags $arg" ;;
            *)
                files="$files $arg"
                ((fileC++))
                ;;
        esac
    done

    if [ $fileC -gt 1 ] ; then
        for file in $files; do
            c=$(ls -1 $flags $file | wc -l)
            echo "$file: $c"
        done
    else
        ls -1 $flags $files | wc -l
    fi
}


# mkdir / cd
# Make a directory and change into it
# All arguments are given to mkdir
# Only the last argument is given to cd
mkcd() {
    mkdir "$@"
    cd "${@##* }"   # ${@##* } == last word of $@
}


# sort
# Sort files in place
# Allows multiple files
# Any argument starting with '-' is treated as a flag
#   and used on all calls to 'sort'
sortip() {
    flags=""
    files=""

    # separate flags and files
    for arg in $@; do
        case $arg in
            -*)
                flags="$flags $arg" ;;
            *)
                files="$files $arg" ;;
        esac
    done

    for file in $files; do
        sort $flags -o $file $file
    done
}
